generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  firstName String
  lastName  String
  password  String
  role      Role     @default(MEMBER)
  avatar    String?
  bio       String?
  phone     String?
  department String?
  timezone  String   @default("UTC")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  messages  Message[]
  rooms     RoomMember[]
  analytics UserAnalytics[]

  @@map("users")
}

model Room {
  id          String   @id @default(cuid())
  name        String
  description String?
  isPrivate   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  members  RoomMember[]
  messages Message[]

  @@map("rooms")
}

model RoomMember {
  id     String @id @default(cuid())
  userId String
  roomId String
  role   RoomRole @default(MEMBER)
  joinedAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@unique([userId, roomId])
  @@map("room_members")
}

model Message {
  id        String      @id @default(cuid())
  content   String
  type      MessageType @default(TEXT)
  userId    String
  roomId    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("messages")
}

model UserAnalytics {
  id            String   @id @default(cuid())
  userId        String
  messagesSent  Int      @default(0)
  roomsJoined   Int      @default(0)
  lastActive    DateTime @default(now())
  totalUptime   Int      @default(0) // in minutes
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
  @@map("user_analytics")
}

enum Role {
  ADMIN
  MANAGER
  MEMBER
}

enum RoomRole {
  OWNER
  ADMIN
  MEMBER
}

enum MessageType {
  TEXT
  IMAGE
  FILE
  SYSTEM
}